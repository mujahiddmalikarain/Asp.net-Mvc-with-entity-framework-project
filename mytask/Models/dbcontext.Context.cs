//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mytask.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbcontext2 : DbContext
    {
        public dbcontext2()
            : base("name=dbcontext2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Mst_action> Mst_action { get; set; }
        public virtual DbSet<Mst_approval> Mst_approval { get; set; }
        public virtual DbSet<Mst_callreason> Mst_callreason { get; set; }
        public virtual DbSet<Mst_product> Mst_product { get; set; }
        public virtual DbSet<Mst_producttype> Mst_producttype { get; set; }
        public virtual DbSet<Mst_region> Mst_region { get; set; }
    
        public virtual ObjectResult<login_Result> login(string uid, string password)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_Result>("login", uidParameter, passwordParameter);
        }
    
        public virtual int sp_delete_action(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_action", idParameter);
        }
    
        public virtual int sp_delete_approval(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_approval", idParameter);
        }
    
        public virtual int sp_delete_callreason(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_callreason", idParameter);
        }
    
        public virtual int sp_delete_product(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_product", idParameter);
        }
    
        public virtual ObjectResult<sp_get_allproducts_Result> sp_get_allproducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_allproducts_Result>("sp_get_allproducts");
        }
    
        public virtual int sp_insert_Action(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Action", nameParameter);
        }
    
        public virtual int sp_insert_approval(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_approval", nameParameter);
        }
    
        public virtual int sp_insert_Callreason(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Callreason", nameParameter);
        }
    
        public virtual int sp_insert_product(string pname, Nullable<int> p_type, string custname, string address, Nullable<decimal> m_number, Nullable<int> region, string s_no)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var p_typeParameter = p_type.HasValue ?
                new ObjectParameter("p_type", p_type) :
                new ObjectParameter("p_type", typeof(int));
    
            var custnameParameter = custname != null ?
                new ObjectParameter("custname", custname) :
                new ObjectParameter("custname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var m_numberParameter = m_number.HasValue ?
                new ObjectParameter("M_number", m_number) :
                new ObjectParameter("M_number", typeof(decimal));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(int));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_product", pnameParameter, p_typeParameter, custnameParameter, addressParameter, m_numberParameter, regionParameter, s_noParameter);
        }
    
        public virtual ObjectResult<sp_select_action_Result> sp_select_action()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_action_Result>("sp_select_action");
        }
    
        public virtual ObjectResult<sp_select_approval_Result> sp_select_approval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_approval_Result>("sp_select_approval");
        }
    
        public virtual ObjectResult<sp_select_callreason_Result> sp_select_callreason()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_callreason_Result>("sp_select_callreason");
        }
    
        public virtual int sp_Update_Action(string name, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Action", nameParameter, idParameter);
        }
    
        public virtual int sp_Update_Approval(string name, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Approval", nameParameter, idParameter);
        }
    
        public virtual int sp_Update_Callreason(string name, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Callreason", nameParameter, idParameter);
        }
    
        public virtual int sp_update_product(Nullable<int> id, string pname, Nullable<int> p_type, string custname, string address, Nullable<decimal> m_number, Nullable<int> region, string s_no)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var p_typeParameter = p_type.HasValue ?
                new ObjectParameter("p_type", p_type) :
                new ObjectParameter("p_type", typeof(int));
    
            var custnameParameter = custname != null ?
                new ObjectParameter("custname", custname) :
                new ObjectParameter("custname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var m_numberParameter = m_number.HasValue ?
                new ObjectParameter("M_number", m_number) :
                new ObjectParameter("M_number", typeof(decimal));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(int));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_product", idParameter, pnameParameter, p_typeParameter, custnameParameter, addressParameter, m_numberParameter, regionParameter, s_noParameter);
        }
    }
}
